// Generated by CoffeeScript 1.6.2
/*!
Calculates the specificity of CSS selectors
http://www.w3.org/TR/css3-selectors/#specificity

Originally from: https://github.com/keeganstreet/specificity
Simplified by: smilekzs

Returns: []{selector: '...', specificity: [a, b, c]}
*/

var getSpecificity;

getSpecificity = (function() {
  var attributeRegex, calculate, calculateSingle, classRegex, elementRegex, idRegex, pseudoClassRegex, pseudoClassWithBracketsRegex, pseudoElementRegex;

  attributeRegex = /(\[[^\]]+\])/g;
  idRegex = /(#[^\s\+>~\.\[:]+)/g;
  classRegex = /(\.[^\s\+>~\.\[:]+)/g;
  pseudoElementRegex = /(::[^\s\+>~\.\[:]+|:first-line|:first-letter|:before|:after)/gi;
  pseudoClassWithBracketsRegex = /(:[\w-]+\([^\)]*\))/gi;
  pseudoClassRegex = /(:[^\s\+>~\.\[:]+)/g;
  elementRegex = /([^\s\+>~\.\[:]+)/g;
  calculateSingle = function(selector) {
    var findMatch, s, specificity;

    s = selector;
    specificity = [0, 0, 0];
    findMatch = function(regex, type) {
      var match, matches, _i, _len, _results;

      if ((matches = s.match(regex))) {
        _results = [];
        for (_i = 0, _len = matches.length; _i < _len; _i++) {
          match = matches[_i];
          specificity[type]++;
          _results.push(s = s.replace(match, Array(match.length + 1).join(' ')));
        }
        return _results;
      }
    };
    s.replace(/:not\(([^\)]*)\)/g, ' $1 ');
    findMatch(attributeRegex, 1);
    findMatch(idRegex, 0);
    findMatch(classRegex, 1);
    findMatch(pseudoElementRegex, 2);
    findMatch(pseudoClassWithBracketsRegex, 1);
    findMatch(pseudoClassRegex, 1);
    s = s.replace(/[\*\s\+>~]/g, ' ');
    s = s.replace(/[#\.]/g, ' ');
    findMatch(elementRegex, 2);
    return {
      selector: selector,
      specificity: specificity
    };
  };
  return calculate = function(str) {
    return str.split(',').filter(function(s) {
      return s.length;
    }).map(calculateSingle);
  };
})();
